set cut_paste_input [stack 0]
version 8.0 v5
push $cut_paste_input
Group {
 name pMatte
 help "<b>P_Matte</b> creates a sphere or cube shaped 3D matte based on a pass/layer containing position data"
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\ns = nuke.toNode('SphereMatte')\nr = nuke.toNode('Start_End')\n\nif k.name() == \"falloffType\":\n    n\['falloff'].setVisible( k.value() != 'None' )\n    n\['exp'].setVisible( k.value() == 'Exponential' )\n\n"
 tile_color 0xff00ff
 selected true
 xpos 5391
 ypos 2502
 addUserKnob {20 User}
 addUserKnob {41 in l "position data" t "Choose a layer from the input that contains position data" T Shuffle_Input_Channels.in}
 addUserKnob {41 output t "Resulting matte will be written to this layer only" T OutChannel.out}
 addUserKnob {6 unpremultiply t "Check if your position layer is premultiplied" +STARTLINE}
 unpremultiply true
 addUserKnob {6 useAlpha l "ignore outside alpha" t "If your input has an alpha channel, checking this will force everything outside that alpha channel to be black" -STARTLINE}
 useAlpha true
 addUserKnob {26 ""}
 addUserKnob {4 matteShape t "Choose the shape of the 3D matte. Current options are \"Sphere\" and \"Cube\"" M {Sphere Cube Z Y Z "" ""}}
 addUserKnob {41 center t "Sample the viewer or copy XYZ coordinates here to choose the center of the 3D sphere or cube" T Center.center}
 addUserKnob {26 ""}
 addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
 addUserKnob {41 rotate_1 l rotate T Axis1.rotate_1}
 addUserKnob {41 scale_1 l scale T Axis1.scale_1}
 addUserKnob {41 skew T Axis1.skew}
 addUserKnob {41 pivot T Axis1.pivot}
 addUserKnob {26 ""}
 addUserKnob {4 falloffType M {None Linear Smooth Quadratic Cubic Exponential ""}}
 falloffType Smooth
 addUserKnob {7 falloff}
 falloff 0.5
 addUserKnob {7 exp +HIDDEN R 0.1 10}
}
 Input {
  inputs 0
  name img
  xpos -828
  ypos -353
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos -828
  ypos -259
 }
 Shuffle {
  in pObject
  alpha blue
  out rgb
  name Shuffle_Input_Channels
  xpos -828
  ypos -198
 }
set N33b3f000 [stack 0]
 Unpremult {
  name Unpremult1
  xpos -646
  ypos -198
  disable {{!parent.unpremultiply i}}
 }
 Dot {
  name Dot2
  xpos -326
  ypos -193
 }
 Add {
  channels rgb
  value {{-center} {-center} {-center} {curve}}
  name Center
  xpos -360
  ypos -160
  addUserKnob {20 User}
  addUserKnob {18 center}
  center {1086 1409 0}
  addUserKnob {6 center_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 Add {
  channels rgb
  value {{-Axis1.world_matrix.3} {-Axis1.world_matrix.7} {-Axis1.world_matrix.11} {curve}}
  name Translate_Pivot
  xpos -360
  ypos -116
 }
 ColorMatrix {
  matrix {
      {{Axis1.world_matrix.0} {Axis1.world_matrix.1} {Axis1.world_matrix.2}}
      {{Axis1.world_matrix.4} {Axis1.world_matrix.5} {Axis1.world_matrix.6}}
      {{Axis1.world_matrix.8} {Axis1.world_matrix.9} {Axis1.world_matrix.10}}
    }
  invert true
  name Rotate_Scale_Skew
  xpos -360
  ypos -69
  disable {{hasError x200 1}}
 }
set N33b40130 [stack 0]
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 :b"
  name Expression6
  xpos -120
  ypos -14
 }
push $N33b40130
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 :g"
  name Expression5
  xpos -240
  ypos -11
 }
push $N33b40130
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 :r"
  name Expression4
  xpos -360
  ypos -13
 }
push $N33b40130
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 : 1-max(abs(r),abs(g),abs(b))"
  name CubeMatte
  xpos -495
  ypos -15
 }
push $N33b40130
 Expression {
  expr3 "(parent.useAlpha &&  a == 0.0 )? 0 : 1-(sqrt((r*r)+(g*g)+(b*b)))"
  name SphereMatte
  xpos -651
  ypos -15
 }
 Switch {
  inputs 5
  which {{matteShape i}}
  name Switch1
  xpos -366
  ypos 58
 }
 Grade {
  channels alpha
  whitepoint {{falloffType?falloff:0}}
  white_clamp true
  name Falloff
  xpos -366
  ypos 124
 }
set N33b415d0 [stack 0]
 Expression {
  expr3 pow(a,parent.exp)
  name Exponential
  xpos -81
  ypos 229
 }
push $N33b415d0
 Expression {
  expr3 clamp((a**3),0,1)
  name Cubic
  xpos -175
  ypos 228
 }
set N33b41cb0 [stack 0]
push $N33b415d0
 Expression {
  expr3 clamp(pow2(a),0,1)
  name Quadratic
  xpos -269
  ypos 227
 }
push $N33b415d0
 Expression {
  expr3 smoothstep(0,1,a)
  name Smooth
  xpos -366
  ypos 230
 }
push $N33b415d0
 NoOp {
  name Linear
  xpos -457
  ypos 231
 }
push $N33b415d0
 NoOp {
  name None
  xpos -557
  ypos 231
 }
 Switch {
  inputs 6
  which {{falloffType i}}
  name Switch2
  xpos -366
  ypos 318
 }
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos -366
  ypos 378
 }
 Shuffle {
  in alpha
  name OutChannel
  xpos -366
  ypos 439
 }
push $N33b3f000
 Dot {
  name Dot1
  xpos -794
  ypos 527
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels all
  name Copy1
  xpos -366
  ypos 508
 }
 Output {
  name Output1
  xpos -366
  ypos 637
 }
 Axis2 {
  inputs 0
  xform_order STR
  translate {{translate_1} {translate_1} {translate_1}}
  rotate {{rotate_1} {rotate_1} {rotate_1}}
  scaling {{scale_1} {scale_1} {scale_1}}
  uniform_scale 24
  version 74
  name Axis1
  xpos -73
  ypos -203
  addUserKnob {20 User}
  addUserKnob {18 translate_1 l translate R -100 100}
  translate_1 {0 0 0}
  addUserKnob {6 translate_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 transform_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 scale_1 l scale R -100 100}
  scale_1 23
  addUserKnob {6 scale_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {6 scale_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 rotate_1 l rotate R -180 180}
  rotate_1 {0 0 0}
  addUserKnob {6 rotate_1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
push $N33b41cb0
 Viewer {
  input_process false
  name Viewer1
  selected true
  xpos -540
  ypos 124
 }
end_group
